class Solution {
public:
   int recursion(int i,int j,vector<vector<int>>& grid,vector<vector<int>>&dp){
    if(i==0 && j==0) return grid[0][0];
   
   if(i<0 || j<0) return 1e9;
   if(dp[i][j]!=-1) return dp[i][j];
    int up=recursion(i-1,j,grid,dp)+grid[i][j];
    int left=recursion(i,j-1,grid,dp)+grid[i][j];
    return dp[i][j]=min(up,left);
}
    int minPathSum(vector<vector<int>>& grid) {
        vector<vector<int>>dp(grid.size(),vector<int>(grid[0].size(),-1));
        return recursion(grid.size()-1,grid[0].size()-1,grid,dp);
        
    }
};
